8-2
問題

三科目のテストを実施しました． その結果として，20人分の学生番号，名前，三科目の点数のデータをまとめた次のようなテキストファイルが与えられているとします．

score1.txt

1001 AAAA 61 99 72
1002 BBBB 96 72 76
1003 CCCC 68 65 64
1004 DDDD 62 73 52
　　　　　　⋮
1020 TTTT 92 88 86


1行に1人分のデータが記載されている．
各行は，学生番号，名前，三科目の各点数が，半角空白で区切られて記載されている．
学生の情報は，学生番号の順で記載されている．

コマンドライン入力に上記の形式のファイル名を入力すると，次のことを行うプログラムを作成してください：


データファイルから，各学生の情報（学生番号，名前，三科目の各点数）を読み込む．
各学生の三科目の合計点を計算する．
学生の情報を，三科目の合計点の高い順に並べ替える．
三科目の合計点で，上位3位までの点数の学生の情報（学生番号，名前，合計点）を，標準出力に合計点の高い順に出力する． その際，上位3位までに同点の学生が存在し3位までの学生が3人を超える場合，全員の情報を出力する． 例えば，以下の例の場合，青太字の学生の情報を出力する：

例1
1018,RRRR,269　(1位)
1011,KKKK,265　(2位)
1007,GGGG,253　(3位)
1008,HHHH,253　(3位)
1013,MMMM,253　(3位)
1010,JJJJ,245　(6位)
1014,NNNN,242　(7位)
　　　　⋮
例2
1003,CCCC,267　(1位)
1019,SSSS,267　(1位)
1011,KKKK,260　(3位)
1015,OOOO,260　(3位)
1013,MMMM,251　(5位)
1005,EEEE,243　(6位)
　　　　⋮
例3
1003,CCCC,260　(1位)
1004,DDDD,260　(1位)
1015,OOOO,260　(1位)
1018,RRRR,260　(1位)
1001,AAAA,251　(5位)
1009,IIII,238　(6位)
　　　　⋮
このプログラムを作成する際は，以下の要件を満たすように作成してください：

　【全般】

学生の情報を三科目の合計点の高い順に並べ替える（ソートする）際，同点の学生が存在する場合は，もとの順（学生番号の順）が保たれるように並べ替える（ソートする）． つまり，安定なソート法を利用する．
第8回の講義で示したバブルソートが安定なソート法である．
　【入力】

データファイル名は，コマンドライン入力に入力する．
　【出力】

出力には，すべて半角（文字，数字，記号，空白）を使用する．
行の先頭には空白を入れず，行の左端から出力する．

出力の際は，上位3位までの点数の学生ごとに次の形式に従って各1行で出力する
i,n,s
iは学生番号，nは名前，sはその学生の三科目の合計点．

すべての文字間で空白は使用せず，連続して出力する．
例：　1001,AAAA,251

【補足事項】

開発環境には，サンプルのデータファイルとして，以下のテキストファイルを準備しています：
score1.txt
score2.txt
score3.txt
score4.txt

上記の各データファイルの内容は，開発環境で確認してください．
プログラムを作成する際は，実行時に上記のデータファイルを使用しても構いませんし，各自で新たなデータファイルを作成しても構いません．
各自でデータファイルを作成する場合は，上記のサンプルファイルを参照し，同様の形式で作成してください．
実行例

作成したプログラムを実行した際，以下の実行例のように，「コマンドライン入力」欄に入力したデータファイルに対して「標準出力」に結果が表示されるようにしてください：


【実行例1】
「コマンドライン入力」
score1.txt

「標準出力」
1007,GGGG,291
1020,TTTT,266
1009,IIII,257

【実行例2】
「コマンドライン入力」
score2.txt

「標準出力」
1018,RRRR,269
1011,KKKK,265
1007,GGGG,253
1008,HHHH,253
1013,MMMM,253

【実行例3】
「コマンドライン入力」
score3.txt

「標準出力」
1003,CCCC,267
1019,SSSS,267
1011,KKKK,260
1015,OOOO,260

【実行例4】
「コマンドライン入力」
score4.txt

「標準出力」
1003,CCCC,260
1004,DDDD,260
1015,OOOO,260
1018,RRRR,260
